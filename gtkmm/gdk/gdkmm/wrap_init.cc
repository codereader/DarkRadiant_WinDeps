// Generated by generate_wrap_init.pl -- DO NOT MODIFY!

#include <glibmm.h>

// Disable the 'const' function attribute of the get_type() functions.
// GCC would optimize them out because we don't use the return value.
#undef  G_GNUC_CONST
#define G_GNUC_CONST /* empty */

#include <gdkmm/wrap_init.h>
#include <glibmm/error.h>
#include <glibmm/object.h>

// #include the widget headers so that we can call the get_type() static methods:
#include "applaunchcontext.h"
#include "color.h"
#include "cursor.h"
#include "device.h"
#include "devicemanager.h"
#include "display.h"
#include "displaymanager.h"
#include "dragcontext.h"
#include "event.h"
#include "pixbuf.h"
#include "pixbufanimation.h"
#include "pixbufanimationiter.h"
#include "pixbufformat.h"
#include "pixbufloader.h"
#include "rectangle.h"
#include "rgba.h"
#include "screen.h"
#include "timecoord.h"
#include "types.h"
#include "visual.h"
#include "window.h"

extern "C"
{
//Declarations of the *_get_type() functions:

GType gdk_app_launch_context_get_type(void);
GType gdk_cursor_get_type(void);
GType gdk_device_get_type(void);
GType gdk_device_manager_get_type(void);
GType gdk_display_get_type(void);
GType gdk_display_manager_get_type(void);
GType gdk_drag_context_get_type(void);
GType gdk_pixbuf_get_type(void);
GType gdk_pixbuf_animation_get_type(void);
GType gdk_pixbuf_animation_iter_get_type(void);
GType gdk_pixbuf_loader_get_type(void);
GType gdk_screen_get_type(void);
GType gdk_visual_get_type(void);
GType gdk_window_get_type(void);

//Declarations of the *_error_quark() functions:

GQuark gdk_pixbuf_error_quark(void);
} // extern "C"

namespace Gdk {

//Declarations of the *_Class::wrap_new() methods, instead of including all the private headers:

class AppLaunchContext_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Cursor_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Device_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class DeviceManager_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Display_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class DisplayManager_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class DragContext_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Pixbuf_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class PixbufAnimation_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class PixbufAnimationIter_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class PixbufLoader_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Screen_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Visual_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Window_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };

void wrap_init()
{
  // Register Error domains in the main namespace:
  Glib::Error::register_domain(gdk_pixbuf_error_quark(), &PixbufError::throw_func);

  // Map gtypes to gtkmm wrapper-creation functions:
  Glib::wrap_register(gdk_app_launch_context_get_type(), &AppLaunchContext_Class::wrap_new);
  Glib::wrap_register(gdk_cursor_get_type(), &Cursor_Class::wrap_new);
  Glib::wrap_register(gdk_device_get_type(), &Device_Class::wrap_new);
  Glib::wrap_register(gdk_device_manager_get_type(), &DeviceManager_Class::wrap_new);
  Glib::wrap_register(gdk_display_get_type(), &Display_Class::wrap_new);
  Glib::wrap_register(gdk_display_manager_get_type(), &DisplayManager_Class::wrap_new);
  Glib::wrap_register(gdk_drag_context_get_type(), &DragContext_Class::wrap_new);
  Glib::wrap_register(gdk_pixbuf_get_type(), &Pixbuf_Class::wrap_new);
  Glib::wrap_register(gdk_pixbuf_animation_get_type(), &PixbufAnimation_Class::wrap_new);
  Glib::wrap_register(gdk_pixbuf_animation_iter_get_type(), &PixbufAnimationIter_Class::wrap_new);
  Glib::wrap_register(gdk_pixbuf_loader_get_type(), &PixbufLoader_Class::wrap_new);
  Glib::wrap_register(gdk_screen_get_type(), &Screen_Class::wrap_new);
  Glib::wrap_register(gdk_visual_get_type(), &Visual_Class::wrap_new);
  Glib::wrap_register(gdk_window_get_type(), &Window_Class::wrap_new);

  // Register the gtkmm gtypes:
  AppLaunchContext::get_type();
  Cursor::get_type();
  Device::get_type();
  DeviceManager::get_type();
  Display::get_type();
  DisplayManager::get_type();
  DragContext::get_type();
  Pixbuf::get_type();
  PixbufAnimation::get_type();
  PixbufAnimationIter::get_type();
  PixbufLoader::get_type();
  Screen::get_type();
  Visual::get_type();
  Window::get_type();

} // wrap_init()

} // Gdk

