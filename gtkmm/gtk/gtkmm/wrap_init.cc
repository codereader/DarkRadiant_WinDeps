// Generated by generate_wrap_init.pl -- DO NOT MODIFY!

#include <glibmm.h>

// Disable the 'const' function attribute of the get_type() functions.
// GCC would optimize them out because we don't use the return value.
#undef  G_GNUC_CONST
#define G_GNUC_CONST /* empty */

#include <gtkmm/wrap_init.h>
#include <glibmm/error.h>
#include <glibmm/object.h>

// #include the widget headers so that we can call the get_type() static methods:
#include "aboutdialog.h"
#include "accelgroup.h"
#include "accellabel.h"
#include "action.h"
#include "actionable.h"
#include "actiongroup.h"
#include "activatable.h"
#include "adjustment.h"
#include "alignment.h"
#include "appchooser.h"
#include "appchooserbutton.h"
#include "appchooserdialog.h"
#include "appchooserwidget.h"
#include "application.h"
#include "applicationwindow.h"
#include "arrow.h"
#include "aspectframe.h"
#include "assistant.h"
#include "bin.h"
#include "border.h"
#include "box.h"
#include "buildable.h"
#include "builder.h"
#include "button.h"
#include "buttonbox.h"
#include "calendar.h"
#include "cellarea.h"
#include "cellareabox.h"
#include "cellareacontext.h"
#include "celleditable.h"
#include "celllayout.h"
#include "cellrenderer.h"
#include "cellrendereraccel.h"
#include "cellrenderercombo.h"
#include "cellrendererpixbuf.h"
#include "cellrendererprogress.h"
#include "cellrendererspin.h"
#include "cellrendererspinner.h"
#include "cellrenderertext.h"
#include "cellrenderertoggle.h"
#include "cellview.h"
#include "checkbutton.h"
#include "checkmenuitem.h"
#include "clipboard.h"
#include "colorbutton.h"
#include "colorchooser.h"
#include "colorchooserdialog.h"
#ifndef GTKMM_DISABLE_DEPRECATED
#include "colorselection.h"
#endif // *_DISABLE_DEPRECATED
#include "combobox.h"
#include "comboboxtext.h"
#include "container.h"
#include "cssprovider.h"
#include "dialog.h"
#include "drawingarea.h"
#include "editable.h"
#include "entry.h"
#include "entrybuffer.h"
#include "entrycompletion.h"
#include "enums.h"
#include "eventbox.h"
#include "expander.h"
#include "filechooser.h"
#include "filechooserbutton.h"
#include "filechooserdialog.h"
#include "filechooserwidget.h"
#include "filefilter.h"
#include "fixed.h"
#include "fontbutton.h"
#include "fontchooser.h"
#include "fontchooserdialog.h"
#include "fontchooserwidget.h"
#ifndef GTKMM_DISABLE_DEPRECATED
#include "fontselection.h"
#endif // *_DISABLE_DEPRECATED
#include "frame.h"
#include "grid.h"
#ifndef GTKMM_DISABLE_DEPRECATED
#include "handlebox.h"
#endif // *_DISABLE_DEPRECATED
#include "hvbox.h"
#ifndef GTKMM_DISABLE_DEPRECATED
#include "hvbuttonbox.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GTKMM_DISABLE_DEPRECATED
#include "hvpaned.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GTKMM_DISABLE_DEPRECATED
#include "hvscale.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GTKMM_DISABLE_DEPRECATED
#include "hvscrollbar.h"
#endif // *_DISABLE_DEPRECATED
#ifndef GTKMM_DISABLE_DEPRECATED
#include "hvseparator.h"
#endif // *_DISABLE_DEPRECATED
#include "iconfactory.h"
#include "iconinfo.h"
#include "iconset.h"
#include "iconsource.h"
#include "icontheme.h"
#include "iconview.h"
#include "image.h"
#include "imagemenuitem.h"
#include "infobar.h"
#include "invisible.h"
#include "label.h"
#include "layout.h"
#include "linkbutton.h"
#include "liststore.h"
#include "main.h"
#include "menu.h"
#include "menubar.h"
#include "menuitem.h"
#include "menushell.h"
#include "menutoolbutton.h"
#include "messagedialog.h"
#include "misc.h"
#include "notebook.h"
#include "numerableicon.h"
#include "offscreenwindow.h"
#include "orientable.h"
#include "pagesetup.h"
#ifndef G_OS_WIN32
#include "pagesetupunixdialog.h"
#endif // ifndef G_OS_WIN32
#include "paned.h"
#include "papersize.h"
#ifndef G_OS_WIN32
#include "plug.h"
#endif // ifndef G_OS_WIN32
#include "printcontext.h"
#ifndef G_OS_WIN32
#include "printer.h"
#endif // ifndef G_OS_WIN32
#ifndef G_OS_WIN32
#include "printjob.h"
#endif // ifndef G_OS_WIN32
#include "printoperation.h"
#include "printoperationpreview.h"
#include "printsettings.h"
#ifndef G_OS_WIN32
#include "printunixdialog.h"
#endif // ifndef G_OS_WIN32
#include "progressbar.h"
#include "radioaction.h"
#include "radiobutton.h"
#include "radiomenuitem.h"
#include "radiotoolbutton.h"
#include "range.h"
#include "recentaction.h"
#include "recentchooser.h"
#include "recentchooserdialog.h"
#include "recentchoosermenu.h"
#include "recentchooserwidget.h"
#include "recentfilter.h"
#include "recentinfo.h"
#include "recentmanager.h"
#include "requisition.h"
#include "scale.h"
#include "scalebutton.h"
#include "scrollable.h"
#include "scrollbar.h"
#include "scrolledwindow.h"
#include "selectiondata.h"
#include "separator.h"
#include "separatormenuitem.h"
#include "separatortoolitem.h"
#include "settings.h"
#include "sizegroup.h"
#ifndef G_OS_WIN32
#include "socket.h"
#endif // ifndef G_OS_WIN32
#include "spinbutton.h"
#include "spinner.h"
#include "statusbar.h"
#include "statusicon.h"
#include "stockitem.h"
#include "stylecontext.h"
#include "styleprovider.h"
#include "switch.h"
#ifndef GTKMM_DISABLE_DEPRECATED
#include "table.h"
#endif // *_DISABLE_DEPRECATED
#include "targetlist.h"
#ifndef GTKMM_DISABLE_DEPRECATED
#include "tearoffmenuitem.h"
#endif // *_DISABLE_DEPRECATED
#include "textattributes.h"
#include "textbuffer.h"
#include "textchildanchor.h"
#include "textiter.h"
#include "textmark.h"
#include "texttag.h"
#include "texttagtable.h"
#include "textview.h"
#include "toggleaction.h"
#include "togglebutton.h"
#include "toggletoolbutton.h"
#include "toolbar.h"
#include "toolbutton.h"
#include "toolitem.h"
#include "toolitemgroup.h"
#include "toolpalette.h"
#include "toolshell.h"
#include "tooltip.h"
#include "treedragdest.h"
#include "treedragsource.h"
#include "treeiter.h"
#include "treemodel.h"
#include "treemodelfilter.h"
#include "treemodelsort.h"
#include "treepath.h"
#include "treerowreference.h"
#include "treeselection.h"
#include "treesortable.h"
#include "treestore.h"
#include "treeview.h"
#include "treeviewcolumn.h"
#include "uimanager.h"
#include "viewport.h"
#include "volumebutton.h"
#include "widget.h"
#include "widgetpath.h"
#include "window.h"

extern "C"
{
//Declarations of the *_get_type() functions:

GType gtk_about_dialog_get_type(void);
GType gtk_accel_group_get_type(void);
GType gtk_accel_label_get_type(void);
GType gtk_action_get_type(void);
GType gtk_action_group_get_type(void);
GType gtk_adjustment_get_type(void);
GType gtk_alignment_get_type(void);
GType gtk_app_chooser_button_get_type(void);
GType gtk_app_chooser_dialog_get_type(void);
GType gtk_app_chooser_widget_get_type(void);
GType gtk_application_get_type(void);
GType gtk_application_window_get_type(void);
GType gtk_arrow_get_type(void);
GType gtk_aspect_frame_get_type(void);
GType gtk_assistant_get_type(void);
GType gtk_bin_get_type(void);
GType gtk_box_get_type(void);
GType gtk_builder_get_type(void);
GType gtk_button_get_type(void);
GType gtk_button_box_get_type(void);
GType gtk_calendar_get_type(void);
GType gtk_cell_area_get_type(void);
GType gtk_cell_area_box_get_type(void);
GType gtk_cell_area_context_get_type(void);
GType gtk_cell_renderer_get_type(void);
GType gtk_cell_renderer_accel_get_type(void);
GType gtk_cell_renderer_combo_get_type(void);
GType gtk_cell_renderer_pixbuf_get_type(void);
GType gtk_cell_renderer_progress_get_type(void);
GType gtk_cell_renderer_spin_get_type(void);
GType gtk_cell_renderer_spinner_get_type(void);
GType gtk_cell_renderer_text_get_type(void);
GType gtk_cell_renderer_toggle_get_type(void);
GType gtk_cell_view_get_type(void);
GType gtk_check_button_get_type(void);
GType gtk_check_menu_item_get_type(void);
GType gtk_clipboard_get_type(void);
GType gtk_color_button_get_type(void);
GType gtk_color_chooser_dialog_get_type(void);
#ifndef GTKMM_DISABLE_DEPRECATED
GType gtk_color_selection_get_type(void);
GType gtk_color_selection_dialog_get_type(void);
#endif // *_DISABLE_DEPRECATED
GType gtk_combo_box_get_type(void);
GType gtk_combo_box_text_get_type(void);
GType gtk_container_get_type(void);
GType gtk_css_provider_get_type(void);
GType gtk_dialog_get_type(void);
GType gtk_drawing_area_get_type(void);
GType gtk_entry_get_type(void);
GType gtk_entry_buffer_get_type(void);
GType gtk_entry_completion_get_type(void);
GType gtk_event_box_get_type(void);
GType gtk_expander_get_type(void);
GType gtk_file_chooser_button_get_type(void);
GType gtk_file_chooser_dialog_get_type(void);
GType gtk_file_chooser_widget_get_type(void);
GType gtk_file_filter_get_type(void);
GType gtk_fixed_get_type(void);
GType gtk_font_button_get_type(void);
GType gtk_font_chooser_dialog_get_type(void);
GType gtk_font_chooser_widget_get_type(void);
#ifndef GTKMM_DISABLE_DEPRECATED
GType gtk_font_selection_get_type(void);
GType gtk_font_selection_dialog_get_type(void);
#endif // *_DISABLE_DEPRECATED
GType gtk_frame_get_type(void);
GType gtk_grid_get_type(void);
#ifndef GTKMM_DISABLE_DEPRECATED
GType gtk_handle_box_get_type(void);
#endif // *_DISABLE_DEPRECATED
GType gtk_vbox_get_type(void);
GType gtk_hbox_get_type(void);
#ifndef GTKMM_DISABLE_DEPRECATED
GType gtk_vbutton_box_get_type(void);
GType gtk_hbutton_box_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GTKMM_DISABLE_DEPRECATED
GType gtk_hpaned_get_type(void);
GType gtk_vpaned_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GTKMM_DISABLE_DEPRECATED
GType gtk_vscale_get_type(void);
GType gtk_hscale_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GTKMM_DISABLE_DEPRECATED
GType gtk_vscrollbar_get_type(void);
GType gtk_hscrollbar_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GTKMM_DISABLE_DEPRECATED
GType gtk_vseparator_get_type(void);
GType gtk_hseparator_get_type(void);
#endif // *_DISABLE_DEPRECATED
GType gtk_icon_factory_get_type(void);
GType gtk_icon_theme_get_type(void);
GType gtk_icon_view_get_type(void);
GType gtk_image_get_type(void);
GType gtk_image_menu_item_get_type(void);
GType gtk_info_bar_get_type(void);
GType gtk_invisible_get_type(void);
GType gtk_label_get_type(void);
GType gtk_layout_get_type(void);
GType gtk_link_button_get_type(void);
GType gtk_list_store_get_type(void);
GType gtk_menu_get_type(void);
GType gtk_menu_bar_get_type(void);
GType gtk_menu_item_get_type(void);
GType gtk_menu_shell_get_type(void);
GType gtk_menu_tool_button_get_type(void);
GType gtk_message_dialog_get_type(void);
GType gtk_misc_get_type(void);
GType gtk_notebook_get_type(void);
GType gtk_numerable_icon_get_type(void);
GType gtk_offscreen_window_get_type(void);
GType gtk_page_setup_get_type(void);
#ifndef G_OS_WIN32
GType gtk_page_setup_unix_dialog_get_type(void);
#endif // ifndef G_OS_WIN32
GType gtk_paned_get_type(void);
#ifndef G_OS_WIN32
GType gtk_plug_get_type(void);
#endif // ifndef G_OS_WIN32
GType gtk_print_context_get_type(void);
#ifndef G_OS_WIN32
GType gtk_printer_get_type(void);
#endif // ifndef G_OS_WIN32
#ifndef G_OS_WIN32
GType gtk_print_job_get_type(void);
#endif // ifndef G_OS_WIN32
GType gtk_print_operation_get_type(void);
GType gtk_print_settings_get_type(void);
#ifndef G_OS_WIN32
GType gtk_print_unix_dialog_get_type(void);
#endif // ifndef G_OS_WIN32
GType gtk_progress_bar_get_type(void);
GType gtk_radio_action_get_type(void);
GType gtk_radio_button_get_type(void);
GType gtk_radio_menu_item_get_type(void);
GType gtk_radio_tool_button_get_type(void);
GType gtk_range_get_type(void);
GType gtk_recent_action_get_type(void);
GType gtk_recent_chooser_dialog_get_type(void);
GType gtk_recent_chooser_menu_get_type(void);
GType gtk_recent_chooser_widget_get_type(void);
GType gtk_recent_filter_get_type(void);
GType gtk_recent_manager_get_type(void);
GType gtk_scale_get_type(void);
GType gtk_scale_button_get_type(void);
GType gtk_scrollbar_get_type(void);
GType gtk_scrolled_window_get_type(void);
GType gtk_separator_get_type(void);
GType gtk_separator_menu_item_get_type(void);
GType gtk_separator_tool_item_get_type(void);
GType gtk_settings_get_type(void);
GType gtk_size_group_get_type(void);
#ifndef G_OS_WIN32
GType gtk_socket_get_type(void);
#endif // ifndef G_OS_WIN32
GType gtk_spin_button_get_type(void);
GType gtk_spinner_get_type(void);
GType gtk_statusbar_get_type(void);
GType gtk_status_icon_get_type(void);
GType gtk_style_context_get_type(void);
GType gtk_switch_get_type(void);
#ifndef GTKMM_DISABLE_DEPRECATED
GType gtk_table_get_type(void);
#endif // *_DISABLE_DEPRECATED
#ifndef GTKMM_DISABLE_DEPRECATED
GType gtk_tearoff_menu_item_get_type(void);
#endif // *_DISABLE_DEPRECATED
GType gtk_text_buffer_get_type(void);
GType gtk_text_child_anchor_get_type(void);
GType gtk_text_mark_get_type(void);
GType gtk_text_tag_get_type(void);
GType gtk_text_tag_table_get_type(void);
GType gtk_text_view_get_type(void);
GType gtk_toggle_action_get_type(void);
GType gtk_toggle_button_get_type(void);
GType gtk_toggle_tool_button_get_type(void);
GType gtk_toolbar_get_type(void);
GType gtk_tool_button_get_type(void);
GType gtk_tool_item_get_type(void);
GType gtk_tool_item_group_get_type(void);
GType gtk_tool_palette_get_type(void);
GType gtk_tooltip_get_type(void);
GType gtk_tree_model_filter_get_type(void);
GType gtk_tree_model_sort_get_type(void);
GType gtk_tree_selection_get_type(void);
GType gtk_tree_store_get_type(void);
GType gtk_tree_view_get_type(void);
GType gtk_tree_view_column_get_type(void);
GType gtk_ui_manager_get_type(void);
GType gtk_viewport_get_type(void);
GType gtk_volume_button_get_type(void);
GType gtk_widget_get_type(void);
GType gtk_window_group_get_type(void);
GType gtk_window_get_type(void);

//Declarations of the *_error_quark() functions:

GQuark gtk_builder_error_quark(void);
GQuark gtk_file_chooser_error_quark(void);
GQuark gtk_icon_theme_error_quark(void);
GQuark gtk_print_error_quark(void);
GQuark gtk_recent_chooser_error_quark(void);
GQuark gtk_recent_manager_error_quark(void);
} // extern "C"

namespace Gtk {

//Declarations of the *_Class::wrap_new() methods, instead of including all the private headers:

class AboutDialog_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class AccelGroup_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class AccelLabel_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Action_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class ActionGroup_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Adjustment_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Alignment_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class AppChooserButton_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class AppChooserDialog_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class AppChooserWidget_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Application_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class ApplicationWindow_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Arrow_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class AspectFrame_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Assistant_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Bin_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Box_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Builder_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Button_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class ButtonBox_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Calendar_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class CellArea_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class CellAreaBox_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class CellAreaContext_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class CellRenderer_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class CellRendererAccel_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class CellRendererCombo_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class CellRendererPixbuf_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class CellRendererProgress_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class CellRendererSpin_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class CellRendererSpinner_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class CellRendererText_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class CellRendererToggle_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class CellView_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class CheckButton_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class CheckMenuItem_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Clipboard_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class ColorButton_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class ColorChooserDialog_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#ifndef GTKMM_DISABLE_DEPRECATED
class ColorSelection_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class ColorSelectionDialog_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
class ComboBox_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class ComboBoxText_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Container_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class CssProvider_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Dialog_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class DrawingArea_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Entry_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class EntryBuffer_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class EntryCompletion_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class EventBox_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Expander_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class FileChooserButton_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class FileChooserDialog_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class FileChooserWidget_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class FileFilter_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Fixed_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class FontButton_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class FontChooserDialog_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class FontChooserWidget_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#ifndef GTKMM_DISABLE_DEPRECATED
class FontSelection_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class FontSelectionDialog_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
class Frame_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Grid_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#ifndef GTKMM_DISABLE_DEPRECATED
class HandleBox_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
class VBox_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class HBox_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#ifndef GTKMM_DISABLE_DEPRECATED
class VButtonBox_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class HButtonBox_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GTKMM_DISABLE_DEPRECATED
class HPaned_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class VPaned_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GTKMM_DISABLE_DEPRECATED
class VScale_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class HScale_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GTKMM_DISABLE_DEPRECATED
class VScrollbar_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class HScrollbar_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GTKMM_DISABLE_DEPRECATED
class VSeparator_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class HSeparator_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
class IconFactory_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class IconTheme_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class IconView_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Image_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class ImageMenuItem_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class InfoBar_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Invisible_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Label_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Layout_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class LinkButton_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class ListStore_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Menu_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class MenuBar_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class MenuItem_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class MenuShell_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class MenuToolButton_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class MessageDialog_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Misc_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Notebook_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class NumerableIcon_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class OffscreenWindow_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class PageSetup_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#ifndef G_OS_WIN32
class PageSetupUnixDialog_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // ifndef G_OS_WIN32
class Paned_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#ifndef G_OS_WIN32
class Plug_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // ifndef G_OS_WIN32
class PrintContext_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#ifndef G_OS_WIN32
class Printer_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // ifndef G_OS_WIN32
#ifndef G_OS_WIN32
class PrintJob_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // ifndef G_OS_WIN32
class PrintOperation_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class PrintSettings_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#ifndef G_OS_WIN32
class PrintUnixDialog_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // ifndef G_OS_WIN32
class ProgressBar_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class RadioAction_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class RadioButton_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class RadioMenuItem_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class RadioToolButton_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Range_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class RecentAction_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class RecentChooserDialog_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class RecentChooserMenu_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class RecentChooserWidget_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class RecentFilter_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class RecentManager_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Scale_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class ScaleButton_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Scrollbar_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class ScrolledWindow_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Separator_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class SeparatorMenuItem_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class SeparatorToolItem_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Settings_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class SizeGroup_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#ifndef G_OS_WIN32
class Socket_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // ifndef G_OS_WIN32
class SpinButton_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Spinner_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Statusbar_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class StatusIcon_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class StyleContext_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Switch_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#ifndef GTKMM_DISABLE_DEPRECATED
class Table_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
#ifndef GTKMM_DISABLE_DEPRECATED
class TearoffMenuItem_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
#endif // *_DISABLE_DEPRECATED
class TextBuffer_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class TextChildAnchor_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class TextMark_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class TextTag_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class TextTagTable_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class TextView_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class ToggleAction_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class ToggleButton_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class ToggleToolButton_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Toolbar_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class ToolButton_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class ToolItem_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class ToolItemGroup_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class ToolPalette_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Tooltip_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class TreeModelFilter_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class TreeModelSort_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class TreeSelection_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class TreeStore_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class TreeView_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class TreeViewColumn_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class UIManager_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Viewport_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class VolumeButton_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Widget_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class WindowGroup_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Window_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };

void wrap_init()
{
  // Register Error domains in the main namespace:
  Glib::Error::register_domain(gtk_builder_error_quark(), &BuilderError::throw_func);
  Glib::Error::register_domain(gtk_file_chooser_error_quark(), &FileChooserError::throw_func);
  Glib::Error::register_domain(gtk_icon_theme_error_quark(), &IconThemeError::throw_func);
  Glib::Error::register_domain(gtk_print_error_quark(), &PrintError::throw_func);
  Glib::Error::register_domain(gtk_recent_chooser_error_quark(), &RecentChooserError::throw_func);
  Glib::Error::register_domain(gtk_recent_manager_error_quark(), &RecentManagerError::throw_func);

  // Map gtypes to gtkmm wrapper-creation functions:
  Glib::wrap_register(gtk_about_dialog_get_type(), &AboutDialog_Class::wrap_new);
  Glib::wrap_register(gtk_accel_group_get_type(), &AccelGroup_Class::wrap_new);
  Glib::wrap_register(gtk_accel_label_get_type(), &AccelLabel_Class::wrap_new);
  Glib::wrap_register(gtk_action_get_type(), &Action_Class::wrap_new);
  Glib::wrap_register(gtk_action_group_get_type(), &ActionGroup_Class::wrap_new);
  Glib::wrap_register(gtk_adjustment_get_type(), &Adjustment_Class::wrap_new);
  Glib::wrap_register(gtk_alignment_get_type(), &Alignment_Class::wrap_new);
  Glib::wrap_register(gtk_app_chooser_button_get_type(), &AppChooserButton_Class::wrap_new);
  Glib::wrap_register(gtk_app_chooser_dialog_get_type(), &AppChooserDialog_Class::wrap_new);
  Glib::wrap_register(gtk_app_chooser_widget_get_type(), &AppChooserWidget_Class::wrap_new);
  Glib::wrap_register(gtk_application_get_type(), &Application_Class::wrap_new);
  Glib::wrap_register(gtk_application_window_get_type(), &ApplicationWindow_Class::wrap_new);
  Glib::wrap_register(gtk_arrow_get_type(), &Arrow_Class::wrap_new);
  Glib::wrap_register(gtk_aspect_frame_get_type(), &AspectFrame_Class::wrap_new);
  Glib::wrap_register(gtk_assistant_get_type(), &Assistant_Class::wrap_new);
  Glib::wrap_register(gtk_bin_get_type(), &Bin_Class::wrap_new);
  Glib::wrap_register(gtk_box_get_type(), &Box_Class::wrap_new);
  Glib::wrap_register(gtk_builder_get_type(), &Builder_Class::wrap_new);
  Glib::wrap_register(gtk_button_get_type(), &Button_Class::wrap_new);
  Glib::wrap_register(gtk_button_box_get_type(), &ButtonBox_Class::wrap_new);
  Glib::wrap_register(gtk_calendar_get_type(), &Calendar_Class::wrap_new);
  Glib::wrap_register(gtk_cell_area_get_type(), &CellArea_Class::wrap_new);
  Glib::wrap_register(gtk_cell_area_box_get_type(), &CellAreaBox_Class::wrap_new);
  Glib::wrap_register(gtk_cell_area_context_get_type(), &CellAreaContext_Class::wrap_new);
  Glib::wrap_register(gtk_cell_renderer_get_type(), &CellRenderer_Class::wrap_new);
  Glib::wrap_register(gtk_cell_renderer_accel_get_type(), &CellRendererAccel_Class::wrap_new);
  Glib::wrap_register(gtk_cell_renderer_combo_get_type(), &CellRendererCombo_Class::wrap_new);
  Glib::wrap_register(gtk_cell_renderer_pixbuf_get_type(), &CellRendererPixbuf_Class::wrap_new);
  Glib::wrap_register(gtk_cell_renderer_progress_get_type(), &CellRendererProgress_Class::wrap_new);
  Glib::wrap_register(gtk_cell_renderer_spin_get_type(), &CellRendererSpin_Class::wrap_new);
  Glib::wrap_register(gtk_cell_renderer_spinner_get_type(), &CellRendererSpinner_Class::wrap_new);
  Glib::wrap_register(gtk_cell_renderer_text_get_type(), &CellRendererText_Class::wrap_new);
  Glib::wrap_register(gtk_cell_renderer_toggle_get_type(), &CellRendererToggle_Class::wrap_new);
  Glib::wrap_register(gtk_cell_view_get_type(), &CellView_Class::wrap_new);
  Glib::wrap_register(gtk_check_button_get_type(), &CheckButton_Class::wrap_new);
  Glib::wrap_register(gtk_check_menu_item_get_type(), &CheckMenuItem_Class::wrap_new);
  Glib::wrap_register(gtk_clipboard_get_type(), &Clipboard_Class::wrap_new);
  Glib::wrap_register(gtk_color_button_get_type(), &ColorButton_Class::wrap_new);
  Glib::wrap_register(gtk_color_chooser_dialog_get_type(), &ColorChooserDialog_Class::wrap_new);
#ifndef GTKMM_DISABLE_DEPRECATED
  Glib::wrap_register(gtk_color_selection_get_type(), &ColorSelection_Class::wrap_new);
  Glib::wrap_register(gtk_color_selection_dialog_get_type(), &ColorSelectionDialog_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
  Glib::wrap_register(gtk_combo_box_get_type(), &ComboBox_Class::wrap_new);
  Glib::wrap_register(gtk_combo_box_text_get_type(), &ComboBoxText_Class::wrap_new);
  Glib::wrap_register(gtk_container_get_type(), &Container_Class::wrap_new);
  Glib::wrap_register(gtk_css_provider_get_type(), &CssProvider_Class::wrap_new);
  Glib::wrap_register(gtk_dialog_get_type(), &Dialog_Class::wrap_new);
  Glib::wrap_register(gtk_drawing_area_get_type(), &DrawingArea_Class::wrap_new);
  Glib::wrap_register(gtk_entry_get_type(), &Entry_Class::wrap_new);
  Glib::wrap_register(gtk_entry_buffer_get_type(), &EntryBuffer_Class::wrap_new);
  Glib::wrap_register(gtk_entry_completion_get_type(), &EntryCompletion_Class::wrap_new);
  Glib::wrap_register(gtk_event_box_get_type(), &EventBox_Class::wrap_new);
  Glib::wrap_register(gtk_expander_get_type(), &Expander_Class::wrap_new);
  Glib::wrap_register(gtk_file_chooser_button_get_type(), &FileChooserButton_Class::wrap_new);
  Glib::wrap_register(gtk_file_chooser_dialog_get_type(), &FileChooserDialog_Class::wrap_new);
  Glib::wrap_register(gtk_file_chooser_widget_get_type(), &FileChooserWidget_Class::wrap_new);
  Glib::wrap_register(gtk_file_filter_get_type(), &FileFilter_Class::wrap_new);
  Glib::wrap_register(gtk_fixed_get_type(), &Fixed_Class::wrap_new);
  Glib::wrap_register(gtk_font_button_get_type(), &FontButton_Class::wrap_new);
  Glib::wrap_register(gtk_font_chooser_dialog_get_type(), &FontChooserDialog_Class::wrap_new);
  Glib::wrap_register(gtk_font_chooser_widget_get_type(), &FontChooserWidget_Class::wrap_new);
#ifndef GTKMM_DISABLE_DEPRECATED
  Glib::wrap_register(gtk_font_selection_get_type(), &FontSelection_Class::wrap_new);
  Glib::wrap_register(gtk_font_selection_dialog_get_type(), &FontSelectionDialog_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
  Glib::wrap_register(gtk_frame_get_type(), &Frame_Class::wrap_new);
  Glib::wrap_register(gtk_grid_get_type(), &Grid_Class::wrap_new);
#ifndef GTKMM_DISABLE_DEPRECATED
  Glib::wrap_register(gtk_handle_box_get_type(), &HandleBox_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
  Glib::wrap_register(gtk_vbox_get_type(), &VBox_Class::wrap_new);
  Glib::wrap_register(gtk_hbox_get_type(), &HBox_Class::wrap_new);
#ifndef GTKMM_DISABLE_DEPRECATED
  Glib::wrap_register(gtk_vbutton_box_get_type(), &VButtonBox_Class::wrap_new);
  Glib::wrap_register(gtk_hbutton_box_get_type(), &HButtonBox_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GTKMM_DISABLE_DEPRECATED
  Glib::wrap_register(gtk_hpaned_get_type(), &HPaned_Class::wrap_new);
  Glib::wrap_register(gtk_vpaned_get_type(), &VPaned_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GTKMM_DISABLE_DEPRECATED
  Glib::wrap_register(gtk_vscale_get_type(), &VScale_Class::wrap_new);
  Glib::wrap_register(gtk_hscale_get_type(), &HScale_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GTKMM_DISABLE_DEPRECATED
  Glib::wrap_register(gtk_vscrollbar_get_type(), &VScrollbar_Class::wrap_new);
  Glib::wrap_register(gtk_hscrollbar_get_type(), &HScrollbar_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GTKMM_DISABLE_DEPRECATED
  Glib::wrap_register(gtk_vseparator_get_type(), &VSeparator_Class::wrap_new);
  Glib::wrap_register(gtk_hseparator_get_type(), &HSeparator_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
  Glib::wrap_register(gtk_icon_factory_get_type(), &IconFactory_Class::wrap_new);
  Glib::wrap_register(gtk_icon_theme_get_type(), &IconTheme_Class::wrap_new);
  Glib::wrap_register(gtk_icon_view_get_type(), &IconView_Class::wrap_new);
  Glib::wrap_register(gtk_image_get_type(), &Image_Class::wrap_new);
  Glib::wrap_register(gtk_image_menu_item_get_type(), &ImageMenuItem_Class::wrap_new);
  Glib::wrap_register(gtk_info_bar_get_type(), &InfoBar_Class::wrap_new);
  Glib::wrap_register(gtk_invisible_get_type(), &Invisible_Class::wrap_new);
  Glib::wrap_register(gtk_label_get_type(), &Label_Class::wrap_new);
  Glib::wrap_register(gtk_layout_get_type(), &Layout_Class::wrap_new);
  Glib::wrap_register(gtk_link_button_get_type(), &LinkButton_Class::wrap_new);
  Glib::wrap_register(gtk_list_store_get_type(), &ListStore_Class::wrap_new);
  Glib::wrap_register(gtk_menu_get_type(), &Menu_Class::wrap_new);
  Glib::wrap_register(gtk_menu_bar_get_type(), &MenuBar_Class::wrap_new);
  Glib::wrap_register(gtk_menu_item_get_type(), &MenuItem_Class::wrap_new);
  Glib::wrap_register(gtk_menu_shell_get_type(), &MenuShell_Class::wrap_new);
  Glib::wrap_register(gtk_menu_tool_button_get_type(), &MenuToolButton_Class::wrap_new);
  Glib::wrap_register(gtk_message_dialog_get_type(), &MessageDialog_Class::wrap_new);
  Glib::wrap_register(gtk_misc_get_type(), &Misc_Class::wrap_new);
  Glib::wrap_register(gtk_notebook_get_type(), &Notebook_Class::wrap_new);
  Glib::wrap_register(gtk_numerable_icon_get_type(), &NumerableIcon_Class::wrap_new);
  Glib::wrap_register(gtk_offscreen_window_get_type(), &OffscreenWindow_Class::wrap_new);
  Glib::wrap_register(gtk_page_setup_get_type(), &PageSetup_Class::wrap_new);
#ifndef G_OS_WIN32
  Glib::wrap_register(gtk_page_setup_unix_dialog_get_type(), &PageSetupUnixDialog_Class::wrap_new);
#endif // ifndef G_OS_WIN32
  Glib::wrap_register(gtk_paned_get_type(), &Paned_Class::wrap_new);
#ifndef G_OS_WIN32
  Glib::wrap_register(gtk_plug_get_type(), &Plug_Class::wrap_new);
#endif // ifndef G_OS_WIN32
  Glib::wrap_register(gtk_print_context_get_type(), &PrintContext_Class::wrap_new);
#ifndef G_OS_WIN32
  Glib::wrap_register(gtk_printer_get_type(), &Printer_Class::wrap_new);
#endif // ifndef G_OS_WIN32
#ifndef G_OS_WIN32
  Glib::wrap_register(gtk_print_job_get_type(), &PrintJob_Class::wrap_new);
#endif // ifndef G_OS_WIN32
  Glib::wrap_register(gtk_print_operation_get_type(), &PrintOperation_Class::wrap_new);
  Glib::wrap_register(gtk_print_settings_get_type(), &PrintSettings_Class::wrap_new);
#ifndef G_OS_WIN32
  Glib::wrap_register(gtk_print_unix_dialog_get_type(), &PrintUnixDialog_Class::wrap_new);
#endif // ifndef G_OS_WIN32
  Glib::wrap_register(gtk_progress_bar_get_type(), &ProgressBar_Class::wrap_new);
  Glib::wrap_register(gtk_radio_action_get_type(), &RadioAction_Class::wrap_new);
  Glib::wrap_register(gtk_radio_button_get_type(), &RadioButton_Class::wrap_new);
  Glib::wrap_register(gtk_radio_menu_item_get_type(), &RadioMenuItem_Class::wrap_new);
  Glib::wrap_register(gtk_radio_tool_button_get_type(), &RadioToolButton_Class::wrap_new);
  Glib::wrap_register(gtk_range_get_type(), &Range_Class::wrap_new);
  Glib::wrap_register(gtk_recent_action_get_type(), &RecentAction_Class::wrap_new);
  Glib::wrap_register(gtk_recent_chooser_dialog_get_type(), &RecentChooserDialog_Class::wrap_new);
  Glib::wrap_register(gtk_recent_chooser_menu_get_type(), &RecentChooserMenu_Class::wrap_new);
  Glib::wrap_register(gtk_recent_chooser_widget_get_type(), &RecentChooserWidget_Class::wrap_new);
  Glib::wrap_register(gtk_recent_filter_get_type(), &RecentFilter_Class::wrap_new);
  Glib::wrap_register(gtk_recent_manager_get_type(), &RecentManager_Class::wrap_new);
  Glib::wrap_register(gtk_scale_get_type(), &Scale_Class::wrap_new);
  Glib::wrap_register(gtk_scale_button_get_type(), &ScaleButton_Class::wrap_new);
  Glib::wrap_register(gtk_scrollbar_get_type(), &Scrollbar_Class::wrap_new);
  Glib::wrap_register(gtk_scrolled_window_get_type(), &ScrolledWindow_Class::wrap_new);
  Glib::wrap_register(gtk_separator_get_type(), &Separator_Class::wrap_new);
  Glib::wrap_register(gtk_separator_menu_item_get_type(), &SeparatorMenuItem_Class::wrap_new);
  Glib::wrap_register(gtk_separator_tool_item_get_type(), &SeparatorToolItem_Class::wrap_new);
  Glib::wrap_register(gtk_settings_get_type(), &Settings_Class::wrap_new);
  Glib::wrap_register(gtk_size_group_get_type(), &SizeGroup_Class::wrap_new);
#ifndef G_OS_WIN32
  Glib::wrap_register(gtk_socket_get_type(), &Socket_Class::wrap_new);
#endif // ifndef G_OS_WIN32
  Glib::wrap_register(gtk_spin_button_get_type(), &SpinButton_Class::wrap_new);
  Glib::wrap_register(gtk_spinner_get_type(), &Spinner_Class::wrap_new);
  Glib::wrap_register(gtk_statusbar_get_type(), &Statusbar_Class::wrap_new);
  Glib::wrap_register(gtk_status_icon_get_type(), &StatusIcon_Class::wrap_new);
  Glib::wrap_register(gtk_style_context_get_type(), &StyleContext_Class::wrap_new);
  Glib::wrap_register(gtk_switch_get_type(), &Switch_Class::wrap_new);
#ifndef GTKMM_DISABLE_DEPRECATED
  Glib::wrap_register(gtk_table_get_type(), &Table_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
#ifndef GTKMM_DISABLE_DEPRECATED
  Glib::wrap_register(gtk_tearoff_menu_item_get_type(), &TearoffMenuItem_Class::wrap_new);
#endif // *_DISABLE_DEPRECATED
  Glib::wrap_register(gtk_text_buffer_get_type(), &TextBuffer_Class::wrap_new);
  Glib::wrap_register(gtk_text_child_anchor_get_type(), &TextChildAnchor_Class::wrap_new);
  Glib::wrap_register(gtk_text_mark_get_type(), &TextMark_Class::wrap_new);
  Glib::wrap_register(gtk_text_tag_get_type(), &TextTag_Class::wrap_new);
  Glib::wrap_register(gtk_text_tag_table_get_type(), &TextTagTable_Class::wrap_new);
  Glib::wrap_register(gtk_text_view_get_type(), &TextView_Class::wrap_new);
  Glib::wrap_register(gtk_toggle_action_get_type(), &ToggleAction_Class::wrap_new);
  Glib::wrap_register(gtk_toggle_button_get_type(), &ToggleButton_Class::wrap_new);
  Glib::wrap_register(gtk_toggle_tool_button_get_type(), &ToggleToolButton_Class::wrap_new);
  Glib::wrap_register(gtk_toolbar_get_type(), &Toolbar_Class::wrap_new);
  Glib::wrap_register(gtk_tool_button_get_type(), &ToolButton_Class::wrap_new);
  Glib::wrap_register(gtk_tool_item_get_type(), &ToolItem_Class::wrap_new);
  Glib::wrap_register(gtk_tool_item_group_get_type(), &ToolItemGroup_Class::wrap_new);
  Glib::wrap_register(gtk_tool_palette_get_type(), &ToolPalette_Class::wrap_new);
  Glib::wrap_register(gtk_tooltip_get_type(), &Tooltip_Class::wrap_new);
  Glib::wrap_register(gtk_tree_model_filter_get_type(), &TreeModelFilter_Class::wrap_new);
  Glib::wrap_register(gtk_tree_model_sort_get_type(), &TreeModelSort_Class::wrap_new);
  Glib::wrap_register(gtk_tree_selection_get_type(), &TreeSelection_Class::wrap_new);
  Glib::wrap_register(gtk_tree_store_get_type(), &TreeStore_Class::wrap_new);
  Glib::wrap_register(gtk_tree_view_get_type(), &TreeView_Class::wrap_new);
  Glib::wrap_register(gtk_tree_view_column_get_type(), &TreeViewColumn_Class::wrap_new);
  Glib::wrap_register(gtk_ui_manager_get_type(), &UIManager_Class::wrap_new);
  Glib::wrap_register(gtk_viewport_get_type(), &Viewport_Class::wrap_new);
  Glib::wrap_register(gtk_volume_button_get_type(), &VolumeButton_Class::wrap_new);
  Glib::wrap_register(gtk_widget_get_type(), &Widget_Class::wrap_new);
  Glib::wrap_register(gtk_window_group_get_type(), &WindowGroup_Class::wrap_new);
  Glib::wrap_register(gtk_window_get_type(), &Window_Class::wrap_new);

  // Register the gtkmm gtypes:
  AboutDialog::get_type();
  AccelGroup::get_type();
  AccelLabel::get_type();
  Action::get_type();
  ActionGroup::get_type();
  Adjustment::get_type();
  Alignment::get_type();
  AppChooserButton::get_type();
  AppChooserDialog::get_type();
  AppChooserWidget::get_type();
  Application::get_type();
  ApplicationWindow::get_type();
  Arrow::get_type();
  AspectFrame::get_type();
  Assistant::get_type();
  Bin::get_type();
  Box::get_type();
  Builder::get_type();
  Button::get_type();
  ButtonBox::get_type();
  Calendar::get_type();
  CellArea::get_type();
  CellAreaBox::get_type();
  CellAreaContext::get_type();
  CellRenderer::get_type();
  CellRendererAccel::get_type();
  CellRendererCombo::get_type();
  CellRendererPixbuf::get_type();
  CellRendererProgress::get_type();
  CellRendererSpin::get_type();
  CellRendererSpinner::get_type();
  CellRendererText::get_type();
  CellRendererToggle::get_type();
  CellView::get_type();
  CheckButton::get_type();
  CheckMenuItem::get_type();
  Clipboard::get_type();
  ColorButton::get_type();
  ColorChooserDialog::get_type();
#ifndef GTKMM_DISABLE_DEPRECATED
  ColorSelection::get_type();
  ColorSelectionDialog::get_type();
#endif // *_DISABLE_DEPRECATED
  ComboBox::get_type();
  ComboBoxText::get_type();
  Container::get_type();
  CssProvider::get_type();
  Dialog::get_type();
  DrawingArea::get_type();
  Entry::get_type();
  EntryBuffer::get_type();
  EntryCompletion::get_type();
  EventBox::get_type();
  Expander::get_type();
  FileChooserButton::get_type();
  FileChooserDialog::get_type();
  FileChooserWidget::get_type();
  FileFilter::get_type();
  Fixed::get_type();
  FontButton::get_type();
  FontChooserDialog::get_type();
  FontChooserWidget::get_type();
#ifndef GTKMM_DISABLE_DEPRECATED
  FontSelection::get_type();
  FontSelectionDialog::get_type();
#endif // *_DISABLE_DEPRECATED
  Frame::get_type();
  Grid::get_type();
#ifndef GTKMM_DISABLE_DEPRECATED
  HandleBox::get_type();
#endif // *_DISABLE_DEPRECATED
  VBox::get_type();
  HBox::get_type();
#ifndef GTKMM_DISABLE_DEPRECATED
  VButtonBox::get_type();
  HButtonBox::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GTKMM_DISABLE_DEPRECATED
  HPaned::get_type();
  VPaned::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GTKMM_DISABLE_DEPRECATED
  VScale::get_type();
  HScale::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GTKMM_DISABLE_DEPRECATED
  VScrollbar::get_type();
  HScrollbar::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GTKMM_DISABLE_DEPRECATED
  VSeparator::get_type();
  HSeparator::get_type();
#endif // *_DISABLE_DEPRECATED
  IconFactory::get_type();
  IconTheme::get_type();
  IconView::get_type();
  Image::get_type();
  ImageMenuItem::get_type();
  InfoBar::get_type();
  Invisible::get_type();
  Label::get_type();
  Layout::get_type();
  LinkButton::get_type();
  ListStore::get_type();
  Menu::get_type();
  MenuBar::get_type();
  MenuItem::get_type();
  MenuShell::get_type();
  MenuToolButton::get_type();
  MessageDialog::get_type();
  Misc::get_type();
  Notebook::get_type();
  NumerableIcon::get_type();
  OffscreenWindow::get_type();
  PageSetup::get_type();
#ifndef G_OS_WIN32
  PageSetupUnixDialog::get_type();
#endif // ifndef G_OS_WIN32
  Paned::get_type();
#ifndef G_OS_WIN32
  Plug::get_type();
#endif // ifndef G_OS_WIN32
  PrintContext::get_type();
#ifndef G_OS_WIN32
  Printer::get_type();
#endif // ifndef G_OS_WIN32
#ifndef G_OS_WIN32
  PrintJob::get_type();
#endif // ifndef G_OS_WIN32
  PrintOperation::get_type();
  PrintSettings::get_type();
#ifndef G_OS_WIN32
  PrintUnixDialog::get_type();
#endif // ifndef G_OS_WIN32
  ProgressBar::get_type();
  RadioAction::get_type();
  RadioButton::get_type();
  RadioMenuItem::get_type();
  RadioToolButton::get_type();
  Range::get_type();
  RecentAction::get_type();
  RecentChooserDialog::get_type();
  RecentChooserMenu::get_type();
  RecentChooserWidget::get_type();
  RecentFilter::get_type();
  RecentManager::get_type();
  Scale::get_type();
  ScaleButton::get_type();
  Scrollbar::get_type();
  ScrolledWindow::get_type();
  Separator::get_type();
  SeparatorMenuItem::get_type();
  SeparatorToolItem::get_type();
  Settings::get_type();
  SizeGroup::get_type();
#ifndef G_OS_WIN32
  Socket::get_type();
#endif // ifndef G_OS_WIN32
  SpinButton::get_type();
  Spinner::get_type();
  Statusbar::get_type();
  StatusIcon::get_type();
  StyleContext::get_type();
  Switch::get_type();
#ifndef GTKMM_DISABLE_DEPRECATED
  Table::get_type();
#endif // *_DISABLE_DEPRECATED
#ifndef GTKMM_DISABLE_DEPRECATED
  TearoffMenuItem::get_type();
#endif // *_DISABLE_DEPRECATED
  TextBuffer::get_type();
  TextChildAnchor::get_type();
  TextMark::get_type();
  TextTag::get_type();
  TextTagTable::get_type();
  TextView::get_type();
  ToggleAction::get_type();
  ToggleButton::get_type();
  ToggleToolButton::get_type();
  Toolbar::get_type();
  ToolButton::get_type();
  ToolItem::get_type();
  ToolItemGroup::get_type();
  ToolPalette::get_type();
  Tooltip::get_type();
  TreeModelFilter::get_type();
  TreeModelSort::get_type();
  TreeSelection::get_type();
  TreeStore::get_type();
  TreeView::get_type();
  TreeViewColumn::get_type();
  UIManager::get_type();
  Viewport::get_type();
  VolumeButton::get_type();
  Widget::get_type();
  WindowGroup::get_type();
  Window::get_type();

} // wrap_init()

} // Gtk

