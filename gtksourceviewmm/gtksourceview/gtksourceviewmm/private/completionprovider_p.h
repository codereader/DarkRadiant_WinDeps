// -*- c++ -*-
// Generated by gtkmmproc -- DO NOT MODIFY!
#ifndef _GTKSOURCEVIEWMM_COMPLETIONPROVIDER_P_H
#define _GTKSOURCEVIEWMM_COMPLETIONPROVIDER_P_H


#include <glibmm/private/interface_p.h>

#include <glibmm/private/interface_p.h>

namespace Gsv
{

class CompletionProvider_Class : public Glib::Interface_Class
{
public:
  typedef CompletionProvider CppObjectType;
  typedef GtkSourceCompletionProvider BaseObjectType;
  typedef GtkSourceCompletionProviderIface BaseClassType;
  typedef Glib::Interface_Class CppClassParent;

  friend class CompletionProvider;

  const Glib::Interface_Class& init();

  static void iface_init_function(void* g_iface, void* iface_data);

  static Glib::ObjectBase* wrap_new(GObject*);

protected:

  //Callbacks (default signal handlers):
  //These will call the *_impl member methods, which will then call the existing default signal callbacks, if any.
  //You could prevent the original default signal handlers being called by overriding the *_impl method.

  //Callbacks (virtual functions):
  static char* get_name_vfunc_callback(GtkSourceCompletionProvider* self);
  static GdkPixbuf* get_icon_vfunc_callback(GtkSourceCompletionProvider* self);
  static void populate_vfunc_callback(GtkSourceCompletionProvider* self, GtkSourceCompletionContext* context);
  static gboolean match_vfunc_callback(GtkSourceCompletionProvider* self, GtkSourceCompletionContext* context);
  static GtkSourceCompletionActivation get_activation_vfunc_callback(GtkSourceCompletionProvider* self);
  static GtkWidget* get_info_widget_vfunc_callback(GtkSourceCompletionProvider* self, GtkSourceCompletionProposal* proposal);
  static void update_info_vfunc_callback(GtkSourceCompletionProvider* self, GtkSourceCompletionProposal* proposal, GtkSourceCompletionInfo* info);
  static gboolean get_start_iter_vfunc_callback(GtkSourceCompletionProvider* self, GtkSourceCompletionContext* context, GtkSourceCompletionProposal* proposal, GtkTextIter* iter);
  static gboolean activate_proposal_vfunc_callback(GtkSourceCompletionProvider* self, GtkSourceCompletionProposal* proposal, GtkTextIter* iter);
  static int get_interactive_delay_vfunc_callback(GtkSourceCompletionProvider* self);
  static int get_priority_vfunc_callback(GtkSourceCompletionProvider* self);
};


} // namespace Gsv


#endif /* _GTKSOURCEVIEWMM_COMPLETIONPROVIDER_P_H */

